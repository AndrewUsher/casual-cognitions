{"componentChunkName":"component---src-templates-blog-post-js","path":"/api-security-checklist/","webpackCompilationHash":"115c318475c32b7c029a","result":{"data":{"site":{"siteMetadata":{"title":"Casual Cognitions","author":"Andrew Usher"}},"mdx":{"frontmatter":{"title":"API Security Checklist","date":"November 20, 2018"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"API Security Checklist\",\n  \"date\": \"2018-11-20\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Authentication\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don\\u2019t use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Basic Auth\"), \". Use standard authentication (e.g. \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://jwt.io/\"\n  }), \"JWT\"), \", \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://oauth.net/\"\n  }), \"OAuth\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don\\u2019t reinvent the wheel in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Authentication\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"token generation\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"password storage\"), \". Use the standards\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Max Retry\"), \" and jail features in Login\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use encryption on all sensitive data\")), mdx(\"h3\", null, \"JWT (JSON Web Token)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use a random complicated key (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"JWT Secret\"), \") to make brute forcing the token very hard.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don\\u2019t extract the algorithm from the payload. Force the algorithm in the backend (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"HS256\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"RS256\"), \").\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make token expiration (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"TTL\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"RTTL\"), \") as short as possible.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don\\u2019t store sensitive data in the JWT payload, it can be decoded \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://jwt.io/#debugger-io\"\n  }), \"easily\"), \".\")), mdx(\"h3\", null, \"OAuth\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Always validate \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"redirect_uri\"), \" server-side to allow only whitelisted URLs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Always try to exchange for code and not tokens (don\\u2019t allow \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"response_type=token\"), \").\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"state\"), \" parameter with a random hash to prevent CSRF on the OAuth authentication process.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Define the default scope, and validate scope parameters for each application.\")), mdx(\"h2\", null, \"Access\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Limit requests (Throttling) to avoid DDoS / brute-force attacks.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use HTTPS on server side to avoid MITM (Man in the Middle Attack).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"HSTS\"), \" header with SSL to avoid SSL Strip attack.\")), mdx(\"h2\", null, \"Input\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the proper HTTP method according to the operation: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"GET (read)\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"POST (create)\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"PUT/PATCH (replace/update)\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DELETE (to delete a record)\"), \", and respond with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"405 Method Not Allowed\"), \" if the requested method isn\\u2019t appropriate for the requested resource\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Validate \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"content-type\"), \" on request Accept header (Content Negotiation) to allow only your supported format (e.g. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"application/xml\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"application/json\"), \", etc.) and respond with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"406 Not Acceptable\"), \" response if not matched\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Validate \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"content-type\"), \" of posted data as you accept (e.g. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"application/x-www-form-urlencoded\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"multipart/form-data\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"application/json\"), \", etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Validate user input to avoid common vulnerabilities (e.g. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"XSS\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SQL-Injection\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Remote Code Execution\"), \", etc.).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don\\u2019t use any sensitive data (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"credentials\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Passwords\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"security tokens\"), \", or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"API keys\"), \") in the URL, but use standard Authorization header\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use an API Gateway service to enable caching, Rate Limit policies (e.g. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Quota\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Spike Arrest\"), \", or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Concurrent Rate Limit\"), \") and deploy APIs resources dynamically\")), mdx(\"h2\", null, \"Processing\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Check if all the endpoints are protected behind authentication to avoid broken authentication process\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"User own resource ID should be avoided. Use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/me/orders\"), \" instead of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/user/654321/orders\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don\\u2019t auto-increment IDs. Use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"UUID\"), \" instead\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you are parsing XML files, make sure entity parsing is not enabled to avoid \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"XXE\"), \" (XML external entity attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you are parsing XML files, make sure entity expansion is not enabled to avoid \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Billion Laughs/XML bomb\"), \" via exponential entity expansion attack\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use a CDN for file uploads\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you are dealing with huge amount of data, use Workers and Queues to process as much as possible in background and return response fast to avoid HTTP Blocking\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Do not forget to turn the DEBUG mode OFF\")), mdx(\"h2\", null, \"Output\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Send \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"X-Content-Type-Options: nosniff\"), \" header.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Send \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"X-Frame-Options: deny\"), \" header.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Send \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Content-Security-Policy: default-src 'none'\"), \" header.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Remove fingerprinting headers - \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"X-Powered-By\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Server\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"X-AspNet-Version\"), \", etc.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Force \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"content-type\"), \" for your response, if you return \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"application/json\"), \" then your response \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"content-type\"), \" is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"application/json\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don\\u2019t return sensitive data like \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"credentials\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Passwords\"), \", or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"security tokens\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Return the proper status code according to the operation completed. (e.g. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"200 OK\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"400 Bad Request\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"401 Unauthorized\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"405 Method Not Allowed\"), \", etc.).\")), mdx(\"h2\", null, \"CI & CD\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Audit your design and implementation with unit/integration tests coverage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use a code review process and disregard self-approval\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ensure that all components of your services are statically scanned by AV software before pushing to production, including vendor libraries and other dependencies\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Design a rollback solution for deployments\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/api-security-checklist/","previous":{"id":"da4aadee-d96e-55f8-8900-b98ae6738783","fields":{"slug":"/monorepos-in-js/"},"frontmatter":{"title":"JavaScript Monorepos"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"JavaScript Monorepos\",\n  \"date\": \"2018-11-06T23:46:37.121Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Splitting a large, monolithic codebase into small, encapsulated modules is usually good practice from an architectural perspective. Modularization is useful for everything from microservices to libraries of reusable components. However, it can also be a nightmare from a publishing and source code management perspective.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Discovery\"), \"\\xA0goes downhill when there are dozens or hundreds of code repositories. When new repositories are created, everyone has to add their existence to their mental model of where code lives.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Access control\"), \"\\xA0becomes tedious and error prone, especially when access is granted to repositories one at a time on a \\u201Cneed to know\\u201D basis. New employees tend to go through an endless loop of dependency hell. Each access request simply reveals two more repositories they need to access as well.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Versioning\"), \"\\xA0is also complicated by a highly modular architecture. It often makes sense to \\u201Csnapshot\\u201D a collection of related modules by incrementing their version in lockstep (this is what Babel and React do, for example). However, asking humans to remember to do this across a large collection of packages (including packages they haven\\u2019t had to touch) is asking for trouble.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Duplication\"), \"\\xA0of dependencies between packages can vastly increase the time required to install dependencies. Some ecosystems, npm in particular, are highly modular. This encourages reuse but also means that some packages are likely duplicated in every package you develop.\")), mdx(\"p\", null, \"Monorepos are a popular solution to this problem. Instead of one code repository per module, you put all modules in the same code repository. This \\u201Cmonorepo\\u201D is then the only thing a developer needs in order to do development with your application. Discovery, access control, and versioning are all simpler by virtue of everything being in the same place.\"), mdx(\"p\", null, \"Obviously, you have to be okay with granting access to all of the code or none of the code. But if this is acceptable, monorepos can give you all the benefits of modularization with very straightforward source code management.\"), mdx(\"p\", null, \"So how do monorepos work with npm? The two most popular solutions are Yarn workspaces and lerna. Since lerna works with npm, let\\u2019s take a look at how it implements monorepos.\"), mdx(\"p\", null, \"First, let\\u2019s install lerna globally.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"npm i -g lerna\\n\")), mdx(\"p\", null, \"Next, create new lerna repository:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"mkdir monorepo_example\\ncd monorepo_example\\nlerna init\\n\")), mdx(\"p\", null, \"If you look at the contents of lerna.json, you can see where the version and packages are defined.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"cat lerna.json\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"packages\\\": [\\\"packages/*\\\"],\\n  \\\"version\\\": \\\"0.0.0\\\"\\n}\\n\")), mdx(\"p\", null, \"As seen above, the version for all of the packages in our monorepo is 0.0.0. However, there aren\\u2019t any packages in our monorepo yet. Before we add them, we should login to our registry so lerna sets the publishConfig correctly on each new package.\"), mdx(\"p\", null, \"If you\\u2019re publishing somewhere other than the public npm registry (for example, npm Enterprise), you\\u2019ll first need to set your registry.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"npm config set registry https://registry.npm.yourcompany.com\\n\")), mdx(\"p\", null, \"Next, we authenticate to the registry with a user that has publish permissions. If your packages won\\u2019t have a scope, you can omit the \\u2013scope flag.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"npm login \\u2013scope test\\n\")), mdx(\"p\", null, \"We now add a few scoped packages to our monorepo.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"lerna create @test/a\\nlerna create @test/b\\nlerna create @test/c\\n\")), mdx(\"p\", null, \"If you chose the default settings for each package, you\\u2019ll now have three packages (a, b, c) in the test scope with version 0.0.0. Before we can increment the version, we need to commit what we\\u2019ve got so far and create a remote for git:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"git add .\\ngit commit -m \\u201CInitial commit\\u201D\\ngit remote add origin git@github.com:username/reponame.git\\ngit push -u origin master\\n\")), mdx(\"p\", null, \"Now we can bump the version of all packages with one command.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"lerna version major\\n\")), mdx(\"p\", null, \"This command not only bumps every package to 1.0.0, but also pushes the version update to git for you. The last step is to publish these packages to npm. Lerna lets us do this with a single command.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"lerna publish from-git\\n\")), mdx(\"p\", null, \"If this command succeeded, you\\u2019ve successfully published all packages in your first monorepo to npm. Hooray!\"), mdx(\"p\", null, \"In summary, we:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Created a new monorepo with Lerna.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Added three new scoped packages to our monorepo.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Bumped the version of all packages and committed to git with a single command.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Published all packages to an npm registry with a single command.\")), mdx(\"p\", null, \"For more on Lerna, including their solution to the duplication problem (hoisting), I recommend \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://lerna.js.org\"\n  }), \"their excellent docs\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"next":{"id":"6b5fba7c-389e-5787-8e50-58f8dcb80cab","fields":{"slug":"/recovering-from-a-bad-rebase/"},"frontmatter":{"title":"Recovering From A Bad Rebase"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Recovering From A Bad Rebase\",\n  \"date\": \"2018-11-29\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"So, you were in the middle of a rebase, have encountered one or more conflicts, and you have now decided that it was a big mistake and want to get out of the merge.The fastest way out of the merge is:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"git rebase --abort\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}}}}